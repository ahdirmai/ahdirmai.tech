// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  avatar    String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  posts     Post[]
  comments  Comment[]

  @@map("users")
}

model Post {
  id          String      @id @default(cuid())
  title       String
  slug        String      @unique
  excerpt     String?
  content     String
  coverImage  String?
  published   Boolean     @default(false)
  featured    Boolean     @default(false)
  views       Int         @default(0)
  readTime    Int?        // in minutes
  tags        String[]
  category    Category    @default(TECH)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  publishedAt DateTime?

  // Relations
  author   User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId String
  comments Comment[]

  @@map("posts")
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  approved  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId String
  author User   @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId String

  @@map("comments")
}

model Project {
  id               String   @id @default(cuid())
  title            String
  slug             String   @unique
  summary          String
  description      String
  challenge        String?
  solution         String?
  image            String
  additionalImages String[]
  technologies     String[]
  category         String
  featured         Boolean  @default(false)
  githubLink       String?
  liveLink         String?
  date             String
  client           String?
  features         String[]
  results          String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@map("projects")
}

model Contact {
  id        String   @id @default(cuid())
  name      String
  email     String
  subject   String
  message   String
  read      Boolean  @default(false)
  replied   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("contacts")
}

enum Role {
  USER
  ADMIN
}

enum Category {
  TECH
  DESIGN
  TUTORIAL
  PERSONAL
  NEWS
}